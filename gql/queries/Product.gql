#import "~/gql/fragments/Shopify.gql"

# SEE https://help.shopify.com/en/api/storefront-api/reference/queryroot#productbyhandle-2019-07
query ProductByHandle($handle: String!) {
  productByHandle(handle: $handle) {
    id
    title
    handle
    productType
    tags
    descriptionHtml
    availableForSale
    vendor
    images(first: 5) {
      edges {
        node {
          ...productImage
        }
      }
    }
    collections(first: 1) {
      edges {
        node {
          handle
          title
        }
      }
    }
    metafields(first: 5) {
      edges {
        node {
          description
          key
          value
          namespace
          id
        }
      }
    }
    priceRange {
      ...priceRange
    }
    variants(first: 10) {
      edges {
        node {
          # metafields
          id
          title
          availableForSale
          compareAtPriceV2 {
            amount
            currencyCode
          }
          priceV2 {
            amount
            currencyCode
          }
          image {
            ...productImage
          }
        }
      }
    }
  }
}

query ProductById($id: ID!) {
  node(id: $id) {
    id
    ... on Product {
      title
      descriptionHtml
      variants(first: 250) {
        edges {
          node {
            price
            title
            availableForSale
            id
            vendor
          }
        }
      }
    }
  }
}

query Products {
  products(first: 20) {
    pageInfo {
      hasNextPage
      hasPreviousPage
    }
    edges {
      node {
        id
        title
        handle
        options {
          id
          name
          values
        }
        variants(first: 250) {
          pageInfo {
            hasNextPage
            hasPreviousPage
          }
          edges {
            node {
              id
              title
              selectedOptions {
                name
                value
              }
              image {
                src
              }
              price
            }
          }
        }
        images(first: 250) {
          pageInfo {
            hasNextPage
            hasPreviousPage
          }
          edges {
            node {
              src
            }
          }
        }
      }
    }
  }
}
